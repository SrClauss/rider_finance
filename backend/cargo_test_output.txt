   Compiling backend v0.1.0 (D:\rider_finance2\backend)
warning: unused import: `NaiveDate`
 --> src\services\meta\mod.rs:8:18
  |
8 |     use chrono::{NaiveDate};
  |                  ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `NaiveDate`
  --> src\services\relatorio\mod.rs:42:18
   |
42 |     use chrono::{NaiveDate};
   |                  ^^^^^^^^^

warning: unused variable: `now`
   --> src\services\meta\mod.rs:132:9
    |
132 |     let now = chrono::Utc::now().naive_utc();
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_now`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `user_id`
   --> src\services\meta\mod.rs:133:9
    |
133 |     let user_id = extract_user_id_from_cookie(&jar).expect("Usu├írio n├úo autenticado");
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `conn`
  --> src\services\relatorio\mod.rs:59:9
   |
59 |     let conn = &mut establish_connection();
   |         ^^^^ help: if this is intentional, prefix it with an underscore: `_conn`

warning: unused variable: `id_usuario`
  --> src\services\relatorio\mod.rs:61:9
   |
61 |     let id_usuario = ulid::Ulid::new().to_string();
   |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_id_usuario`

warning: unused variable: `cat1_id`
  --> src\services\relatorio\mod.rs:62:9
   |
62 |     let cat1_id = ulid::Ulid::new().to_string();
   |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cat1_id`

warning: unused variable: `cat2_id`
  --> src\services\relatorio\mod.rs:63:9
   |
63 |     let cat2_id = ulid::Ulid::new().to_string();
   |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cat2_id`

warning: function `clean_db` is never used
  --> src\services\meta\mod.rs:10:12
   |
10 |     pub fn clean_db() {
   |            ^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `create_fake_user` is never used
  --> src\services\meta\mod.rs:17:12
   |
17 |     pub fn create_fake_user() -> String {
   |            ^^^^^^^^^^^^^^^^

warning: function `fake_payload` is never used
  --> src\services\meta\mod.rs:51:12
   |
51 |     pub fn fake_payload() -> crate::models::meta::NewMeta {
   |            ^^^^^^^^^^^^

warning: function `test_get_and_delete_meta` is never used
  --> src\services\meta\mod.rs:75:14
   |
75 |     async fn test_get_and_delete_meta() {
   |              ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `test_relatorio_stats_handler` is never used
  --> src\services\relatorio\mod.rs:64:14
   |
64 |     async fn test_relatorio_stats_handler() {
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: `backend` (lib) generated 2 warnings
error[E0277]: the trait bound `fn(CookieJar, Json<...>) -> ... {create_meta_handler}: Handler<_, _>` is not satisfied
   --> src\main.rs:35:30
    |
35  |     .route("/api/meta", post(create_meta_handler))
    |                         ---- ^^^^^^^^^^^^^^^^^^^ the trait `Handler<_, _>` is not implemented for fn item `fn(CookieJar, Json<NewMeta>) -> ... {create_meta_handler}`
    |                         |
    |                         required by a bound introduced by this call
    |
    = note: Consider using `#[axum::debug_handler]` to improve the error message
    = help: the following other types implement trait `Handler<T, S>`:
              `Layered<L, H, T, S>` implements `Handler<T, S>`
              `MethodRouter<S>` implements `Handler<(), S>`
              `axum_extra::handler::IntoHandler<H, T, S>` implements `Handler<T, S>`
              `axum_extra::handler::or::Or<L, R, Lt, Rt, S>` implements `Handler<(M, Lt, Rt), S>`
note: required by a bound in `post`
   --> C:\Users\claus\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\axum-0.8.4\src\routing\method_routing.rs:445:1
    |
445 | top_level_handler_fn!(post, POST);
    | ^^^^^^^^^^^^^^^^^^^^^^----^^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `post`
    = note: the full name for the type has been written to 'D:\rider_finance2\backend\target\debug\deps\backend-2046e513f161baca.long-type-3676602686861305705.txt'
    = note: consider using `--verbose` to print the full type name to the console
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

For more information about this error, try `rustc --explain E0277`.
error: could not compile `backend` (bin "backend" test) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
warning: `backend` (lib test) generated 13 warnings (2 duplicates) (run `cargo fix --lib -p backend --tests` to apply 2 suggestions)
